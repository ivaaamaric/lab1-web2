{"remainingRequest":"/Users/ivaaamaric/Downloads/01-login/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/ivaaamaric/Downloads/01-login/src/views/Admin.vue?vue&type=template&id=54c38a05","dependencies":[{"path":"/Users/ivaaamaric/Downloads/01-login/src/views/Admin.vue","mtime":1667165867515},{"path":"/Users/ivaaamaric/Downloads/01-login/node_modules/cache-loader/dist/cjs.js","mtime":1667133495839},{"path":"/Users/ivaaamaric/Downloads/01-login/node_modules/babel-loader/lib/index.js","mtime":1667133498348},{"path":"/Users/ivaaamaric/Downloads/01-login/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1667133496442},{"path":"/Users/ivaaamaric/Downloads/01-login/node_modules/cache-loader/dist/cjs.js","mtime":1667133495839},{"path":"/Users/ivaaamaric/Downloads/01-login/node_modules/vue-loader-v16/dist/index.js","mtime":1667133496278}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2PgogICAgICAgIDxoMj5Db21tZW50cyBvbiB7eyBob21lIH19IHZzLiB7eyB2aXNpdG9yIH19IHt7ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0YWRhdGEgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fTo8L2gyPgogICAgICAgIDxkaXYgdi1mb3I9ImNvbW1lbnQgaW4gb2xkQ29tbWVudHMiIDprZXk9ImNvbW1lbnQiPgogICAgICAgICAgICA8cD57eyBjb21tZW50LnVzZXIgfX0gc2FpZDoge3sgY29tbWVudC5jb21tZW50IH19CiAgICAgICAgICAgICAgICA8aW1nIHYtaWY9InVzZXIucm9sZSA9PSBhZG1pbiIgQGNsaWNrPSJkZWxldGVDb21tZW50KGNvbW1lbnQpIiBzcmM9Ii4uL2Fzc2V0cy9kZWxldGUucG5nIiBoZWlnaHQ9IjI1IiAvPgogICAgICAgICAgICA8L3A+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiB2LWZvcj0iY29tbWVudCBpbiBhbGxMb2NhbENvbW1lbnRzPy5maWx0ZXIoKGNvbW1lbnQpID0+IGNvbW1lbnQuZ2FtZUlkID09IHRoaXMuJHJvdXRlLnBhcmFtcy5pZCkiCiAgICAgICAgICAgIDprZXk9ImNvbW1lbnQiPgogICAgICAgICAgICA8cD57eyBjb21tZW50LnVzZXIgfX0gc2FpZDoge3sgY29tbWVudC5jb21tZW50IH19CiAgICAgICAgICAgICAgICA8aW1nIHYtaWY9ImNvbW1lbnQudXNlciA9PSB1c2VyLm5hbWUgfHwgdXNlci5yb2xlID09IGFkbWluIiBAY2xpY2s9ImRlbGV0ZUNvbW1lbnQoY29tbWVudCkiCiAgICAgICAgICAgICAgICAgICAgc3JjPSIuLi9hc3NldHMvZGVsZXRlLnBuZyIgaGVpZ2h0PSIyNSIgLz4KICAgICAgICAgICAgICAgIDxpbWcgdi1pZj0iY29tbWVudC51c2VyID09IHVzZXIubmFtZSIgQGNsaWNrPSJ1cGRhdGVDb21tZW50KGNvbW1lbnQpIiBzcmM9Ii4uL2Fzc2V0cy9lZGl0LnBuZyIKICAgICAgICAgICAgICAgICAgICBoZWlnaHQ9IjI1IiAvPgogICAgICAgICAgICA8L3A+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXY+CiAgICAgICAgPHRleHRhcmVhIHYtbW9kZWw9ImlucHV0IiAvPgogICAgPC9kaXY+CiAgICA8YnV0dG9uIEBjbGljaz0iYWRkQ29tbWVudChpbnB1dCkiPkhhdmUgeW91ciBzYXk8L2J1dHRvbj4K"},{"version":3,"sources":["/Users/ivaaamaric/Downloads/01-login/src/views/Admin.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,CAAC;QACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,+EAA+E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,+EAA+E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1N,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9C,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC5C,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC3G,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACjG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACd,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC5C,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACtF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC5C,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YACrB,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC;QACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAC/B,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/ivaaamaric/Downloads/01-login/src/views/Admin.vue","sourceRoot":"","sourcesContent":["<template>\n    <div>\n        <h2>Comments on {{ home }} vs. {{ visitor }} {{                                                                              metadata                                                                              }}:</h2>\n        <div v-for=\"comment in oldComments\" :key=\"comment\">\n            <p>{{ comment.user }} said: {{ comment.comment }}\n                <img v-if=\"user.role == admin\" @click=\"deleteComment(comment)\" src=\"../assets/delete.png\" height=\"25\" />\n            </p>\n        </div>\n        <div v-for=\"comment in allLocalComments?.filter((comment) => comment.gameId == this.$route.params.id)\"\n            :key=\"comment\">\n            <p>{{ comment.user }} said: {{ comment.comment }}\n                <img v-if=\"comment.user == user.name || user.role == admin\" @click=\"deleteComment(comment)\"\n                    src=\"../assets/delete.png\" height=\"25\" />\n                <img v-if=\"comment.user == user.name\" @click=\"updateComment(comment)\" src=\"../assets/edit.png\"\n                    height=\"25\" />\n            </p>\n        </div>\n    </div>\n    <div>\n        <textarea v-model=\"input\" />\n    </div>\n    <button @click=\"addComment(input)\">Have your say</button>\n</template>\n  \n<script>\nimport json from '../json/comments.json'\nimport { useAuth0 } from '@auth0/auth0-vue';\n\nexport default {\n    data() {\n        const auth0 = useAuth0()\n        const getUserMetadata = async () => {\n            try {\n                const accessToken = await auth0.getAccessTokenSilently();\n                alert(accessToken)\n                let jwtData = accessToken.split('.')[4]\n                alert(jwtData)\n                let decodedJwtJsonData = window.atob(jwtData)\n                let decodedJwtData = JSON.parse(decodedJwtJsonData)\n                let isAdmin = decodedJwtData.Admin\n\n                alert(isAdmin)\n            } catch (e) {\n                console.log(e.message);\n            }\n        };\n        getUserMetadata();\n\n        return {\n            home: this.$route.params.home,\n            visitor: this.$route.params.visitor,\n            oldComments: json.comments.filter((comment) => comment.gameId == this.$route.params.id),\n            allLocalComments: JSON.parse(window.localStorage.getItem('comments')),\n            metadata: \"\",\n            input: \"\",\n            editingMode: false,\n            editingComment: null,\n            user: auth0.user\n        }\n    },\n    methods: {\n        addComment(comment) {\n            if (this.editingMode && this.editingComment != null) {\n                var index = this.allLocalComments.indexOf(this.editingComment)\n                if (index > -1) {\n                    this.allLocalComments[index].comment = this.input\n                    const data = JSON.stringify(this.allLocalComments)\n                    window.localStorage.setItem('comments', data)\n                }\n                this.input = \"\"\n                this.editingMode = false\n                this.editingComment = null\n                return\n            }\n\n            var local = window.localStorage.getItem('comments')\n            var localComments = JSON.parse(local)\n            if (localComments == null || localComments == undefined) localComments = []\n            localComments.push({ gameId: this.$route.params.id, user: this.user.name, comment: comment })\n            const data = JSON.stringify(localComments)\n            window.localStorage.setItem('comments', data)\n            this.allLocalComments = localComments\n            this.input = \"\"\n        },\n        deleteComment(comment) {\n            if (comment.user != this.user.name) {\n                return\n            }\n            var index = this.allLocalComments.indexOf(comment)\n            if (index > -1) {\n                this.allLocalComments.splice(index, 1)\n                const data = JSON.stringify(this.allLocalComments)\n                window.localStorage.setItem('comments', data)\n            }\n            index = this.oldComments.indexOf(comment)\n            if (index > -1) {\n                this.oldComments.splice(index, 1)\n            }\n        },\n        updateComment(comment) {\n            if (comment.user != this.user.name) {\n                return\n            }\n            this.input = comment.comment\n            this.editingMode = true\n            this.editingComment = comment\n        }\n    }\n}\n</script>"]}]}